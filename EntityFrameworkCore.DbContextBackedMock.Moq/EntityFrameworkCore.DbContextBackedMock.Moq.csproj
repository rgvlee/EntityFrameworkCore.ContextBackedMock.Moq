<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <AssemblyName>EntityFrameworkCore.DbContextBackedMock.Moq</AssemblyName>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Version>0.0.7</Version>
    <Authors>rgvlee</Authors>
    <Company />
    <Description>Allows you to create a mock DbContext (and mock DbSets) and have it backed by an actual DbContext.

It's designed to work with the Microsoft InMemory provider (https://docs.microsoft.com/en-us/ef/core/miscellaneous/testing/in-memory) that is
often used for testing. The InMemory provider is great for most cases however it doesn't do everything. That's where
this library steps in. It has specific functionality to allow operations involving the FromSql extension to be included
in your tests, as well as all of the benefits of using a mocking framework (e.g., the ability to verify method invocation).</Description>
    <PackageProjectUrl>https://github.com/rgvlee/EntityFrameworkCore.DbContextBackedMock.Moq</PackageProjectUrl>
    <RepositoryUrl>https://github.com/rgvlee/EntityFrameworkCore.DbContextBackedMock.Moq</RepositoryUrl>
    <PackageTags>moq EntityFrameworkCore EntityFramework InMemory DbContext testing test tests</PackageTags>
    <PackageLicenseUrl>https://github.com/rgvlee/EntityFrameworkCore.DbContextBackedMock.Moq/blob/master/License.txt</PackageLicenseUrl>
    <Copyright>Copyright (c) 2019 Lee Anderson</Copyright>
    <PackageId>EntityFrameworkCore.DbContextBackedMock.Moq</PackageId>
    <Product>EntityFrameworkCore.DbContextBackedMock.Moq</Product>
    <AssemblyVersion>0.0.7.0</AssemblyVersion>
    <FileVersion>0.0.7.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="2.2.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.2.4" />
    <PackageReference Include="Moq" Version="4.12.0" />
  </ItemGroup>

</Project>
